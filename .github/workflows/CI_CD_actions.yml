name: Tests

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Lint with flake8
        run: |
          flake8 glotaran

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install .
          python -m pip install -U -r requirements_dev.txt
      - name: Show installed packages
        run: pip freeze
      - name: Build docs
        run: |
          make --directory=docs clean html

  docs-links:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install .
          python -m pip install -U -r requirements_dev.txt
      - name: Show installed packages
        run: pip freeze
      - name: Check doc links
        run: |
          make --directory=docs clean linkcheck $@ | tee linkcheck-output.txt
          exit ${PIPESTATUS[0]}
      - name: Linkcheck summary
        if: ${{ always() }}
        run: cat linkcheck-output.txt | grep -E "(\(line.*\)|writing output)"

  test:
    runs-on: ${{ matrix.os }}
    needs: lint
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: [3.6, 3.7, 3.8]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          python -m pip install -r requirements_dev.txt
      - name: Show installed packages
        run: pip freeze
      - name: Run tests
        run: |
          pytest --cov=./ --cov-report term --cov-report xml --cov-config .coveragerc -k 'not IrfDispersion' glotaran

      - name: Codecov Upload
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    needs: [test, docs]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -r requirements_dev.txt
      - name: Build dist
        run: |
          python setup.py sdist bdist_wheel

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_pyglotaran_token }}
